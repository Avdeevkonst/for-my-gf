"""apikey table

Revision ID: 7f62e781ce54
Revises: b17afaf933ec
Create Date: 2025-05-12 22:53:23.340426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7f62e781ce54'
down_revision: Union[str, None] = 'b17afaf933ec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('privateaccess',
    sa.Column('access_code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['telegram_id'], ['user.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_private_access_access_code', 'privateaccess', ['access_code'], unique=False)
    op.create_index('ix_private_access_expires_at', 'privateaccess', ['expires_at'], unique=False)
    op.alter_column('user', 'registered_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'registered_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_index('ix_private_access_expires_at', table_name='privateaccess')
    op.drop_index('ix_private_access_access_code', table_name='privateaccess')
    op.drop_table('privateaccess')
    # ### end Alembic commands ###
